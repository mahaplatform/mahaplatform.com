'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _server = require('../../../server');

var _user = require('../../../models/user');

var _user2 = _interopRequireDefault(_user);

var _user_serializer = require('../../../serializers/user_serializer');

var _user_serializer2 = _interopRequireDefault(_user_serializer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultQuery = function defaultQuery(req, trx, qb, options) {

  qb.select(options.knex.raw('distinct on (maha_users.id, maha_users.first_name, maha_users.last_name, maha_users.email) maha_users.*'));

  qb.innerJoin('maha_users_roles', 'maha_users_roles.user_id', 'maha_users.id');

  qb.where('is_active', true);
};

var appFilter = function appFilter(qb, filter, options) {

  qb.innerJoin('maha_roles_apps', 'maha_roles_apps.role_id', 'maha_users_roles.role_id');

  qb.whereIn('maha_roles_apps.app_id', filter.$eq);
};

var rightFilter = function rightFilter(qb, filter, options) {

  qb.innerJoin('maha_roles_rights', 'maha_roles_rights.role_id', 'maha_users_roles.role_id');

  qb.whereIn('maha_roles_rights.right_id', filter.$eq);
};

var usersResources = new _server.Resources({
  defaultQuery: defaultQuery,
  defaultSort: 'last_name',
  model: _user2.default,
  path: '/users',
  only: ['list'],
  searchParams: ['first_name', 'last_name', 'email'],
  serializer: _user_serializer2.default,
  sortParams: ['id', 'first_name', 'last_name', 'email'],
  virtualFilters: {
    app_id: appFilter,
    right_id: rightFilter
  },
  withRelated: ['photo']
});

exports.default = usersResources;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiZGVmYXVsdFF1ZXJ5IiwicmVxIiwidHJ4IiwicWIiLCJvcHRpb25zIiwic2VsZWN0Iiwia25leCIsInJhdyIsImlubmVySm9pbiIsIndoZXJlIiwiYXBwRmlsdGVyIiwiZmlsdGVyIiwid2hlcmVJbiIsIiRlcSIsInJpZ2h0RmlsdGVyIiwidXNlcnNSZXNvdXJjZXMiLCJSZXNvdXJjZXMiLCJkZWZhdWx0U29ydCIsIm1vZGVsIiwiVXNlciIsInBhdGgiLCJvbmx5Iiwic2VhcmNoUGFyYW1zIiwic2VyaWFsaXplciIsIlVzZXJTZXJpYWxpemVyIiwic29ydFBhcmFtcyIsInZpcnR1YWxGaWx0ZXJzIiwiYXBwX2lkIiwicmlnaHRfaWQiLCJ3aXRoUmVsYXRlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsZUFBZSxTQUFmQSxZQUFlLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxFQUFYLEVBQWVDLE9BQWYsRUFBMkI7O0FBRTlDRCxLQUFHRSxNQUFILENBQVVELFFBQVFFLElBQVIsQ0FBYUMsR0FBYixDQUFpQix5R0FBakIsQ0FBVjs7QUFFQUosS0FBR0ssU0FBSCxDQUFhLGtCQUFiLEVBQWlDLDBCQUFqQyxFQUE2RCxlQUE3RDs7QUFFQUwsS0FBR00sS0FBSCxDQUFTLFdBQVQsRUFBc0IsSUFBdEI7QUFFRCxDQVJEOztBQVVBLElBQU1DLFlBQVksU0FBWkEsU0FBWSxDQUFDUCxFQUFELEVBQUtRLE1BQUwsRUFBYVAsT0FBYixFQUF5Qjs7QUFFekNELEtBQUdLLFNBQUgsQ0FBYSxpQkFBYixFQUFnQyx5QkFBaEMsRUFBMkQsMEJBQTNEOztBQUVBTCxLQUFHUyxPQUFILENBQVcsd0JBQVgsRUFBcUNELE9BQU9FLEdBQTVDO0FBRUQsQ0FORDs7QUFRQSxJQUFNQyxjQUFjLFNBQWRBLFdBQWMsQ0FBQ1gsRUFBRCxFQUFLUSxNQUFMLEVBQWFQLE9BQWIsRUFBeUI7O0FBRTNDRCxLQUFHSyxTQUFILENBQWEsbUJBQWIsRUFBa0MsMkJBQWxDLEVBQStELDBCQUEvRDs7QUFFQUwsS0FBR1MsT0FBSCxDQUFXLDRCQUFYLEVBQXlDRCxPQUFPRSxHQUFoRDtBQUVELENBTkQ7O0FBUUEsSUFBTUUsaUJBQWlCLElBQUlDLGlCQUFKLENBQWM7QUFDbkNoQiw0QkFEbUM7QUFFbkNpQixlQUFhLFdBRnNCO0FBR25DQyxTQUFPQyxjQUg0QjtBQUluQ0MsUUFBTSxRQUo2QjtBQUtuQ0MsUUFBTSxDQUFDLE1BQUQsQ0FMNkI7QUFNbkNDLGdCQUFjLENBQUMsWUFBRCxFQUFjLFdBQWQsRUFBMEIsT0FBMUIsQ0FOcUI7QUFPbkNDLGNBQVlDLHlCQVB1QjtBQVFuQ0MsY0FBWSxDQUFDLElBQUQsRUFBTSxZQUFOLEVBQW1CLFdBQW5CLEVBQStCLE9BQS9CLENBUnVCO0FBU25DQyxrQkFBZ0I7QUFDZEMsWUFBUWpCLFNBRE07QUFFZGtCLGNBQVVkO0FBRkksR0FUbUI7QUFhbkNlLGVBQWEsQ0FBQyxPQUFEO0FBYnNCLENBQWQsQ0FBdkI7O2tCQWdCZWQsYyIsImZpbGUiOiJ1bmtub3duIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2VzIH0gZnJvbSAnLi4vLi4vLi4vc2VydmVyJ1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3VzZXInXG5pbXBvcnQgVXNlclNlcmlhbGl6ZXIgZnJvbSAnLi4vLi4vLi4vc2VyaWFsaXplcnMvdXNlcl9zZXJpYWxpemVyJ1xuXG5jb25zdCBkZWZhdWx0UXVlcnkgPSAocmVxLCB0cngsIHFiLCBvcHRpb25zKSA9PiB7XG5cbiAgcWIuc2VsZWN0KG9wdGlvbnMua25leC5yYXcoJ2Rpc3RpbmN0IG9uIChtYWhhX3VzZXJzLmlkLCBtYWhhX3VzZXJzLmZpcnN0X25hbWUsIG1haGFfdXNlcnMubGFzdF9uYW1lLCBtYWhhX3VzZXJzLmVtYWlsKSBtYWhhX3VzZXJzLionKSlcblxuICBxYi5pbm5lckpvaW4oJ21haGFfdXNlcnNfcm9sZXMnLCAnbWFoYV91c2Vyc19yb2xlcy51c2VyX2lkJywgJ21haGFfdXNlcnMuaWQnKVxuXG4gIHFiLndoZXJlKCdpc19hY3RpdmUnLCB0cnVlKVxuXG59XG5cbmNvbnN0IGFwcEZpbHRlciA9IChxYiwgZmlsdGVyLCBvcHRpb25zKSA9PiB7XG5cbiAgcWIuaW5uZXJKb2luKCdtYWhhX3JvbGVzX2FwcHMnLCAnbWFoYV9yb2xlc19hcHBzLnJvbGVfaWQnLCAnbWFoYV91c2Vyc19yb2xlcy5yb2xlX2lkJylcblxuICBxYi53aGVyZUluKCdtYWhhX3JvbGVzX2FwcHMuYXBwX2lkJywgZmlsdGVyLiRlcSlcblxufVxuXG5jb25zdCByaWdodEZpbHRlciA9IChxYiwgZmlsdGVyLCBvcHRpb25zKSA9PiB7XG5cbiAgcWIuaW5uZXJKb2luKCdtYWhhX3JvbGVzX3JpZ2h0cycsICdtYWhhX3JvbGVzX3JpZ2h0cy5yb2xlX2lkJywgJ21haGFfdXNlcnNfcm9sZXMucm9sZV9pZCcpXG5cbiAgcWIud2hlcmVJbignbWFoYV9yb2xlc19yaWdodHMucmlnaHRfaWQnLCBmaWx0ZXIuJGVxKVxuXG59XG5cbmNvbnN0IHVzZXJzUmVzb3VyY2VzID0gbmV3IFJlc291cmNlcyh7XG4gIGRlZmF1bHRRdWVyeSxcbiAgZGVmYXVsdFNvcnQ6ICdsYXN0X25hbWUnLFxuICBtb2RlbDogVXNlcixcbiAgcGF0aDogJy91c2VycycsXG4gIG9ubHk6IFsnbGlzdCddLFxuICBzZWFyY2hQYXJhbXM6IFsnZmlyc3RfbmFtZScsJ2xhc3RfbmFtZScsJ2VtYWlsJ10sXG4gIHNlcmlhbGl6ZXI6IFVzZXJTZXJpYWxpemVyLFxuICBzb3J0UGFyYW1zOiBbJ2lkJywnZmlyc3RfbmFtZScsJ2xhc3RfbmFtZScsJ2VtYWlsJ10sXG4gIHZpcnR1YWxGaWx0ZXJzOiB7XG4gICAgYXBwX2lkOiBhcHBGaWx0ZXIsXG4gICAgcmlnaHRfaWQ6IHJpZ2h0RmlsdGVyXG4gIH0sXG4gIHdpdGhSZWxhdGVkOiBbJ3Bob3RvJ11cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IHVzZXJzUmVzb3VyY2VzXG4iXX0=